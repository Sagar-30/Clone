                                             Html

Meta tag - Meta tag ka use hamari website ko batane ke bare mein hota hai sari details hm meta tag mein store krte hain
     Eg-  description
                  - OG tag


Responsive image -- 
                     depends on dpr(device pixel ratio) . matlab kitni jagah mein kitne pixels hain. 
     Use - Srcset attribute
     Eg-  <img srcset = "image1.png 1x,
                              Imgae2.png 2x,
                              Image3.png 3x" 
                              alt ="Responsive images">
   Here 1x,2x are the dpr. 1x means jitni screen utne hi pixels. 2x means jitni screen usse double pixels and so on 

      Art direction problem - Isme hm device ke hisab se pixels km krne ki bajay main point pe hi photo ki zoom kra dete hain.

   -- iska syntax bhi srcset ki Tarah hi rahega but yha pr hm log 1x ki jagah sizes de rahe honge width  mein.

   Ex -- <img srcset="image1.jpg 400w,
                                       Image2.jpg 600w,
                                       Image3.jpg 800w"
                                       Alt="image"
                                       Sizes="(max-width: 400px) 400px,
                                       (max-width:600px) 600px,
                                       800px"
                                       >
          Note- yeh sizes wala ek condition hai agar Max width 400 hogi toh image 1 output hoga nahi toh voh aagle case check kregi and so on.


Lists-         
             Ordered list- ol
             Unordered list - ul
                                         List item - li
    Note - hm lists ko nested bhi bna sakte Hain jaise unordered list ke ander order list ka bhi use ke sakte Hain and vice versa.


Tables- 
                <Table> - starting tag 
                <Thead>- table head
                <Tbody>- table body
                <Tfoot> - table foot
                <Th> - table heading 
                <Tr>- table row
                <Td> - table data 
                All tags have closing tag.
                <caption> - give caption to the table
                <colgroup> - we can style whole column
                <colgroup span="2" style="background-color=green"> -- It tells how many column we have to style
                <colspan>-- yeh bta sakte Hain ki col kitni col ki jagah legi
                <rowspan>-- yeh bta sakte Hain ki row kitni rows ki jagah legi.



Links-    
            a - anchor tag
            A herf="www. "
            Target="_blank" -- naye tab mein khulegi
       a herf= "mailto: sagar302001@gmail.com"- isse mail ka link BN jayega aur voh Gmail mein khulega
       a herf="tel:+919350572047"- isse direct phone ho jayega

Forms-
          IMP :-  Form mein (name, value, action, for, type ) dena bhaut zaruri hai.
name- kis liye hain jaise-(first name/last name) .Name ki madad se hm un values ko aassani se retrive kr sakte hain.
value- Submit krne par aage kya value jayegi voh btata hai
for- Id and for ki values same honi chahiye.
              <form> --> start
               <form action=" "> - yeh btata hai submit ke baad kya krna hai
                <input type="text"> - Take text input

                Different input types - button,checkbox,color,date,datetime-local,email,file,hidden,image,month,number,password,radio,range,reset,search,submit,tel,text,time,url,week etc.

                <label for=" "> First name</label>- Yeh btata hai ki input ka label kya hai hm pehragraph-(p) ki jagah iska use kr skte hain .
                   
                 <input id="first" name="t-shirt" type="radio">
                   <label for="first"> small size</label>

                  <input id="second" name="t-shirt" type="radio">
                   <label for="second"> small size</label>     -- Uper vale dono example main hmne id and for ki value same krdi hai jisse agar ab hm log text pe bhi click krnge toh bhi voh text area/button or anything jo ho sb kuchselect ho jayega.
Note-- label for and id same kedo text and box combine ho jayenge.
And name attribute ka use radio buttons mein hota hai jisse ek hi option select ho instead of many.

SUBMIT - jb hm submit button pe click krte hain toh pehle validation hota hai ki sb kuch theek hai ya nahi aur fir uske baad submit ho jata hai jahan hmne action mein likha hai.
                             
                         <input id="first" name="t-shirt" type="radio" value="small">
                   <label for="first"> small size</label>
                     IMP  :: yha hmne value diya jo value submit krne pr aage jati hai toh value dena bahut zaruri hai.

<select> -- For dropdown menu 
          <option> -- for giving optios to dropdown for choosing 

<textarea cols="30" rows="20"></textarea>

Element types- 
                            inline - jo ek line mein hote hain.
                            Block- jo puri line ko block kr lete hain


Sementic tags - 
                              semantic tags ka use hm website ko hiearchy dene ke liye krte hain. isse maintain acchi hoti hai website and SEO accha hota hai. 
types:- 
               header - website ki heading
main- Website ka main part (website main ek se jyada main nahi ho sakte)

section - main mein hr ek kamm ke liye ek alag section.(jaise portfolio website mein education ka alag section, internship ka alag section, projects ka alag section)

article - Jaise portfolio  website mein project section mein kai projects hi toh hm hr ek project ek new article main daal skte hain(isse website mein changes krne mein aasani hoti hai).

footer- end of page(like about us)

              nav-(navbar) Navigate kaise krna hai website mein jaise links/logo

              Aside - website ka side wala part jisme ads chalti rhti hain(Yeh main ke bahar banta  hai)

                
                h1 -> h6 tags
                p tag
                
                


























                                             Css



................................IMP SECTION..........................
margin-inline: auto;
Padding-inline:auto; --> center krne ke liye 

background-blend-mode: hard-light; (color aur imag ko mix krne ke liye )
.................................................. 




Favicon - website ko icon Dene ke liye
                 <link rel="icon" type="image/x-icon" href="/images/favicon.ico">

<span> agar bahut bade text mein ek word ko style krna ho toh.

     Universal selector - *
     
      Style-body--> :root {
       --primary-text-color: blue;
     }
.h1{
        Color: var(--primary-text-color);
}



   Grouping selector - #first, #second{ anything};
                Isse hm do IDs/classes ko ek sath styling de skte hain

     Nested selector - #first>p{Anything} ;
                Yeh first I'd ke ander pehra graph ko style krdega.


   Specificity order(kisko jyada priority milegi)-
                           I'd>class>elements

 ! Important - iska use tb krte hain jb bahut hi important/urgent ho . Don't use it regularly use it only in urgent case.


Colour choosing website - coolors.co


 % - depend on parent part
Agar hme parent ke corrosponding mein kuch dena hai like agar parent 80% hai aur hmne child ko 50% de diya toh mtlb child ko 40% miega parent ke hisab se parent ka aadha.

vw - (view width ) agar 100vw diya toh pure screen ki width aa jayegi

vh - (view height) 100vh matlab puri screen ki height.

px vs em vs rem- hmko pixel na use krke rem use krna chahiye

    Note - px ka use hm border vagera mein kr skte hain text ko chord kr
 Ex- #h1{ 
                   font-size: 2em;
                     }
    yha pe 2em jo h1 ka default size htahai usse double krdega text font ko. yeh bhi % ki tarah kaam krta hai yeh parent ke size ke corrosponding text size badhayega mtlb agar parent 2em hai toh child 2em lgane se 4em ho jayega.
This is big issue isiliye hmko rem use krna chahiye.

 rem - Yeh parent ke corrosponding kaam nahi krta yeh child ki hi size ko badhayega.
1rem = 16px

Box model - 
        <div> -- it's just a container
        border : 20px solid red;( size type and color) text ke bahar box.
                    padding: 12px 20px 30px 40px;(top,right,bottom,left) text ke charoon taraf.
                   margin: child aur parent ke beech mein space Yeh text ke arround nahi border ke arround hoti hai sabse bahar.

Ex- content --> padding --> border --> margin

IMP-->>
 box-sizing - border box == > isse box mein jo exra space hoga jo border+padding+margin ne liya hoga voh hat jayega aur box ka actual size vahi hoga jo hmne define kiya hoga.

Text -
  Text-transform : (capital ya small krne ke kaam aata hai)
     Text - align-
                      Left, right, centre
                      Inherit - matlab Jo parent ki hogi vohi yeh le lega
                      Justify- text end to end align hoga
        Text - decoration:
                                       Underline,overline,
                    Text-decoration-color: anything;
                     Text-decoration-style: dotted /dashed etc 
          Text-decoration properties=

                                            Text - indent:
                                             Letter-spacing:
                                              Line- height:
                                              Word-spacing:
                                              White-spacing:

       Text shadow -
                           Text-shadow: 2px 4px 2px red;(horizontal vertical blur radius and color)

                          
 Transparent colour -
                                        Color: transparent;
                      

FONT -
                   font-family:"Times New roman",Times,serif; (Browser mein Jo milega voh applied ho jayega teeno mein se)

     Website - fonts.google.com 
Note- web safe fonts ko hm cotes - ' ' mein nahi likhte aur jinhe import krte hain unhe likhte hain.

Font-size:
Font-weigh:600; -bold krta hai 
Font-style: oblic/normal 



Display Property: 
                                  Block - Puri line occupy kr leta hai.
                                                             block elements- p,h1-h6,div,form,lists

                                   inline -  ek ke baad dusra aata hai
                                                            inline elements - Span,img,a
                                                       /8Note-  Inline elements mein hm width and height define nahi kr skte.
                                 

                                   inline-block - yeh inline bhi hota hai aur isme hm ,log apni height and width bhi define kr skte hain.
                                  
Inline vs inline block --> inline mein uper neeche ka margin kaam nahi krta agar uper neeche margin dena hai toh inline block ka use krna padega.

                     none - isse gayab hi ho jata hai


................................................................................................................................

Position - static, relative, absolute, fixed, sticky

  static - default Jo hota hai.

Relative -normal position ke reate mein use move kr skte hain
       Ex-   .red {
                            Position : Relative;
                            background-color: red;
                            top : 100px; - > Top se 100px neeche aa jayega
                            bottom: 100px; --> bottom se uper aa jayega
                            left: 100px; --> left vali line se 100px left chla jayega
                           Right:100px; --> 100px right
                          }

Absolute - yeh parent ke sath kaam krta hai .
Ex- Agar humne kisi elements ko position absolute di and left 0 px de diya toh voh bilkul left mein chala jayega apne parent ke agar parent nahi hua toh main html mein chala jayega.

IMP- Agar kisi parent ko position relative hai toh yeh uske relatively kaam krega.


Fixed - stick kr deta hai screen ke sath .

Sticky - yeh apni position ko stick kr leta hai apni parent class mein.
    Position: sticky;
    top:20px;

Z-index = Parent div/box neeche rahega and child div/box uper rahega.
      Agar change karna hai kon uper rahega kon neeche toh jisko uper rahna hai use z index jyada se do aur dusre vale ko km.
           Ex- z-index: 1;

Overflow --> 
                        Jb koi elements ek area ke ander fit nahi hota aur voh overflow krne lgta hai.Jaise choti div ke ander text/photo.

         Types - visible, hidden, Scroll, Auto

  Visible - overflow dikhega
  Hidden - nahi dikhega but extra content ko access nahi kr skte 
  Scroll - it gives scrollbar to the box agar jarurat nahi hai fir bhi dega 
  Auto- Agar zarurat hai toh scrollbar dega nahi toh nahi dega.


Float--> 
               To float elements towards right or left

             Types - left, right, none, inherit-(parent ki property ko inherit kr lega)


Clear -> Agar koi pehra graph image ke right mein float kr rha hai aur aur uske right mein ek  aur image hai aur voh hme clear karni hai tb iska use krta hain.
       Types - left, right, both
               Ex- clear:right; (yeh right se clear krdega) .

          Note- iska use images and pehra graph mein karna hai bs. Layout ke liye flex box vagera hain.

linear-gradient: 
                            Agar do colour dene ho hume toh iska use krte hain.
                  background: Linaer-gradient(to top right, #ffffffff , #ffffff33);


Background-blur: 
                 background: Linaer-gradient(to top right, #ffffffff , #ffffff33); -->is color ki opacity kam hai.(koi bhi km opacity vale colours ka use krskte hain)

Gap- agar bs elements ke baach mein margin chahiye box ke beech mein nahi toh hm iska use krte hain 
Ex- gap:10px:
            OR
           row-gap:10px;
           column-gap:10px;

Flexbox- 
                Display flex krne se Jitni bhi child div hongi voh ek hi line mein aa jati hain.
                Ex- display: flex;
                
                Note - flex hamesha main axis ke arround hoti hai i.e Y (horizontal div- main axis , vertical div- cross axis) Agar change karna hai toh hme direction change karni padegi.
                Ex- flex- direction: column;


Flex container - jispe hm flex lga rahe Hain aur uske ander div hai jo flexbox hoga.
        Properties -
                               Flex-direction
                               Flex-wrap 
                               Flex-flow
                               Justify-content
                               Align - item
                               Align content 
                
Flex-direction --> yeh main axis ko cross axis mein change krdeta hai. 
         Ex- flex-direction: column;

Flex-wrap --> jitni width hai box ki usse jyada shrink nahi honge agar screen ko aur chota krenge toh upar neeche chle jayenge 
     Ex- flex-wrap:wrap;

Flex-flow --> isme hm flex-direction and flex-wrap dono ka use kr skte hain.
  
        Ex-  flex-flow: wrap row; (yeh row ki direction mein wrap krega div's ko)

Justify-content -->. Item/div's ko main axis pr align kr skte hain left/right Jo kuch bhi krna ho.

        Note- Agar main axis change krna ho toh flex-direction ka use kr skte hain.

         Ex- justify-content: space-around; 
         (isse box mein jitni bhi space bachegi items ke arround aa jayegi.)

                justify-content: space-between;
                (isse bs items ke beech mein space aayega left and right mein nahi) 

            Justify-content:Flex-start; (Sare elements start mein)
             Justify-content:Flex-end; (Sare elements end mein)
               Justify-content:Flex-center; (Sare elements centre mein)



Align-item--> cross axis pe items ko align krta hai.

       Ex- align-item: centre; (center mein la dega) 

                     Properties: strech - default hai
                                           Centre - center mein
                                           flex-start - top
                                           flex-end- bottom


Align-content --> (rows ke beech ki spacing ko change krne ke kaam aata hai) screen choti krne pr jb items neeche chle jate Hain toh do rows ke beech mein spacing ko change kr skte hain.

   Ex- align-content: flex-start;. (Rows uper ki taraf banengi )

               Properties -.   Flex-start 
                                        Space-between 
                                         space-evenly

Flex-child-items==>
                                    order
                                     flex-grow
                                     flex-shrink
                                     flex-basis
                                     flex
                                     align-self

Order ==> Jitni badi order value utna hi last mein hoga box. default 0 hoti hai;
               Ex- order:1; (Yeh sabse last mein chla jayega)

flex-grow ==> kisi bhi child ko grow kra sakte hain.
                
                          Ex- flex-grow:1 --> ise aage jitni bhi jagah milegi div mein yeh utna hi grow ho jaega.
                         flex-grow:2; --> yeh double speed se grow hoga aur jyada bada hoga.

flex-shrink==> Kisi bhi div /box ko shrink kitni speed se karana hai. By default iski value 1 rheti hai.

                         Ex- flex-shrink:2; yeh double speed  mein shrink hoga;

flex-basis==> Main axis ki line mein agar kisi bhi element ki width batani hai toh iska use krte hain.
                     Ex- flex-basis:100px; (jisko hm yeh denge uski width mein 100px add ho jayenge)

flex==> Short property for  flex-grow,flex-shrink and basis .
        Ex - 0 0 100px; -- (grow, shrink, Basis)

align-self==> akale box ko align krne ke kaam aata hai.
           Ex-  align-self:flex-start; (Akela box bs uper align ho jayega)
          
          properties: 
                               flex-start 
                               flex-end  
                                center
                                 stretch - jitni bhi jagah hogi pura strech ho jayega left, right and top and bottom mein.

Note==> baar baar display flex krna zaruri nahi hai main container mein krdo aur uske baad Jo dusre parent bivs honge unme hm parents ki property lga skte hain.

Nth child selector==> 

                     .top-aecrion: nth-child(3):{
                     Background-color : black;
                     }

Css-grid==>   
           can manage divs two dimensional(yeh y axis pr kaam krta hai normally jaise flex x axis pe kaam krta hai)

	Display:grid;

 parent Properties:    gap
			              grid-template-columns 
                                      grid-template-row
			               justify-content
			               align-content
				        align-items

            Gap==> gap between divs(row gap,col-gap,gap)
			   Ex-
			       gap:10px;
				      OR
					  row-gap:10px;
					  col-gap:5px;

			grid-template-columns==> Colums create and column width .

			Ex- grid-template-columns: 100px 200px 300px; (3 colums bn jayenge)
			    Note- jitne colums bnane hain utni values provide krdo.
                        
						 grid-template-columns: 
						                       1fr 1fr 1fr; (3 column same width,we can increase the value of fr).
											   2fr 1fr 1fr; (first col bada dusre chote puri screen mein)
											   repeat(4, 1fr); (baar baar likhne ki jarurat nahi hai)
											   repeat(auto-fill, 1fr); (jitni jagah milegi vha colum chle jayenge)
											   200px auto;/auto auto ; (jitni width milegi utna bda ho jayega auto vala)

  
             grid-template-row==> rows ko height define
			          Ex- grid-template-columns: 100px 200px 300px; (3 rows ko height mil jayegi aur jitni bhi bachengi auto adjust ho jayengi space mein)
					                             grid-auto-rows:150px; (jin rows ko height nahi dii unko yeh height )


			 justify-content==> X-asis i.e row ki direction mein items ko kahi bhi align kr skte hain

			           Ex- justify-content: start;
					                        center;
					                        end;
											space-around;
											space-between;
											space-evenly;


			 align-content ==> vertically content ko align kr skte hain
			               
						   Ex- align-content: stretch; (Default)
						                     center;
											 start;  top mein chle jayenge
											 end; last mein
											 space-evenly;
											 space-between;
											 space-around;



			 align-items ==> isse hm box ke ander ke items ko align kr skte hain. isse pure container ke item align honge.
			     
				           Ex- align-items: center;
						                       start
								        end;



Child properties:
                                   justify-self
					 align-self
					 grid-column
					 grid-row
					 grid area


			justify-self==> yeh box ko horizontally align krta hai individual ko 
			           
					    Ex- justify-self: start;


			align-self==> yeh box ander ke content ko align krta hai.

			            Ex- align-self:start;

			grid-column==> agar kisi column ko ek se jyada column ki jagah deni hai toh.
			       
				          Ex- grid-column-start: 1;   
						 grid-column-end:3;    (start 1 colum se hoga and 3rd column tak jayega matlab 2 column ki jagah lega).
							     OR
							  grid column: 1/3;  (start and end);
							     OR
							  grid-column: 1/ span 2; (span box count krega aur aage do colums tak chla jayega)
							      OR
							  grid-column: 1/ -1; (start to end)


			 grid-row ==> agar row ko ek se jyada row ki jagah deni hai toh


                          Ex- grid-row-start: 1;   
						      grid-row-end:3;    (start 1 colum se hoga and 3rd row tak jayega matlab 2 row ki jagah lega).
							     OR
							  grid row: 1/3;  (start and end);
							     OR
							  grid-row: 1/ span 2; (span box count krega aur aage do rows tak chla jayega)
					             OR
							  grid-column: 1/ -1; (start to end)


			  grid-area ==> dono grid row and colum ko define kr skte hain.
			        
					       EX- grid-area : 1 / 1 / 3 / 4; (row start / column start / row end / column end)


				
grid-template-area===>>> 
                         isse hm name define kr skte hain aur fir layout bna skta hain;
                               
		Ex-  .container{
				grid-template-area:" header header header header" (yeh puri row bs header ko mil gayi)
			       " sidebar main main main "     (1 column sidebar ko 3 colums main ko )
		              " sidebar main main main "     (1 column sidebar ko 3 colums main ko )
				" footer footer footer footer" ( puri row footer ke liye)
                                                          }

							#box-1 {
								grid-area:header;
								        }
							#box-2 {
								grid-area:main;
									}
							#box3 {
								grid-area:main;
								}
							#box-1 {
								grid-area:footer;
								        }



Media Queries==> 
                              To make website responsive
               Ex-  @media (400px<= width <= 600px){
                   background-color : black;
                     } (width 400px se km hote hi background color change ho jayega)
                                                            OR
                    @media(min-width:400px) and (max-width:600px)
{
                                                                        }


        Orientation==> jaise hi device width device height sekm hogi.
         
                  Ex- @media(orientation: portrait){
                                                     body{
                                                                 background-color : black;
                                                                }
                                                                                    }
Tailwind media queries ==> for choosing sizes for media queries


Type ==> screen ==> Normal screen kaisi dikhegi
                 print ==> wesite print krne pr kaisi dikhegi
                 all
                         Ex- @media screen and (width<=800px){
                                                  }
                  
     

Variables==> 
                       Code ko repeat hone se bachata hai
                                    Declaration==> --my-var: blue;
              
                    Ex- .button {
                                        --new-color: blue;
                                          padding:20px;
                                          background-color: var(--new-color); -(Calling variable)
                                           }
   Note- jo bhi element button class ke ander honge voh is variable ka use kr skte hain.
                        Fallback==> color: var(--new-color, green) ==> agar variable nahi mila toh green color le lega mtlb fallback ho jayega.

      Override ==> Agar parent mein koi aur color hai aur variable ka color child mein change krna chate hain toh use redefine kr skte hain.
                    Ex- 
                          .parent: {
                                        --new-color : white ; (orignal)
                                          }
                            .child: {
                                        --new-color : black; (redefine)
                                          }

                             Types ==> 
                                                Local variable==> kisi class mein define hote hain
                                               global variable==> main html mein definehote hain 


                                global variable define==>
                                                                      :root {
                                                                             --primary-text-color:#222;        
                                                                            } (ise kahi bhi call kr skte hain)











   